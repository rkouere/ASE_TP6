Implémenter une commande cat /proc/stat
Il faut juste faire un 

Equilibre de la charge
1. Implémenter un verou klock (kernel lock).
Deux primitive : klock()
kunlock()
ktrylock()

Verou avec un seul coeur proprietaire : autorie l'accès à toute les structure du noyaux (ex : manipuaiotn de la liste des contexte etc...
Attente active qui utilise les registre corelock et coreunlock

2. Proteger les acès aux liste de contexte (à chaque fois que l'on accède à une de ces listes, on prend le verous et on le relache ensuite)

3. Echanger des contextes en tre deux listes.
variable a proteger : 
current_context
liste des contexte locaux (ctx_list[])
il serait interessant de savoir combien on a de contexte locaux

Il faut aussi que l'on ait un retour  main_core (quand on a plus de contexte, il faut que ce soit propred).
main-core(): elle doit essayer de voler la charge 
ex : voler la moiti des contextes du coeur le plus charg.
-> prendre le verou

Attention : 
il ne faut pas que current ne soit pas celui qu'on est en train de voler


A FAIRE :
changer dans init le fait que l'on veut prendre le context avec le plus de ctx mais seulement si il en a plus de 1
si il en a plus de 1, on lui prend un context (on verifie que ce n'est pas son context courant. Si c'est le cas, on en prend un autre) et on le rajoute  la boucle du coeur.
Ensuite : on prend plus de un context et on fait en sorte de les placer ou il faut